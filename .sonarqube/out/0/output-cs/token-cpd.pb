Î
@D:\Sources\dotNetLab\puma-prey\Common\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str +
)+ ,
], -
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str /
)/ 0
]0 1
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str -
)- .
]. /
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str /
)/ 0
]0 1
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *†
=D:\Sources\dotNetLab\puma-prey\Common\Validation\Validator.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 

Validation %
{ 
public 

static 
class 
	Validator !
{ 
public 
static 
string !
ValidateNameBlackList 2
(2 3
string3 9
input: ?
)? @
{		 	
throw

 
new

 #
NotImplementedException

 -
(

- .
)

. /
;

/ 0
} 	
public 
static 
string !
ValidateNameWhiteList 2
(2 3
string3 9
input: ?
)? @
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
public 
static 
bool 
IsValidFileName *
(* +
string+ 1
input2 7
)7 8
{ 	
Regex 
r 
= 
new 
Regex 
(  
$str  9
)9 :
;: ;
return 
r 
. 
IsMatch 
( 
input "
)" #
;# $
} 	
} 
} ˚
8D:\Sources\dotNetLab\puma-prey\Common\Rest\RestClient.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Rest 
{ 
public 

static 
class 

RestClient "
{ 
private 
const 
string 
BASE_URL %
=& '
$str( L
;L M
public

 
static

 
T

 
Get

 
<

 
T

 
>

 
(

 
string

 %
endpoint

& .
,

. /
params

0 6
object

7 =
[

= >
]

> ?
args

@ D
)

D E
where

F K
T

L M
:

N O
new

P S
(

S T
)

T U
{ 	
T 
item 
= 
new 
T 
( 
) 
; 
using 
( 
var 
handler 
=  
new! $
WebRequestHandler% 6
(6 7
)7 8
)8 9
{ 
handler 
. /
#ServerCertificateValidationCallback ;
+=< >
(? @
sender@ F
,F G
certH L
,L M
chainN S
,S T
sslPolicyErrorsU d
)d e
=>f h
truei m
;m n
using 
( 
var 
client !
=" #
new$ '

HttpClient( 2
(2 3
handler3 :
): ;
); <
{ 
var 
request 
=  !
client" (
.( )
GetAsync) 1
(1 2
string2 8
.8 9
Format9 ?
(? @
$str@ H
,H I
BASE_URLJ R
,R S
endpointT \
)\ ]
)] ^
.^ _
ContinueWith_ k
(k l
(l m
responsem u
)u v
=>w y
{ 
var 
result  &
=' (
response) 1
.1 2
Result2 8
;8 9
var 
json  $
=% &
result' -
.- .
Content. 5
.5 6
ReadAsStringAsync6 G
(G H
)H I
;I J
json  
.  !
Wait! %
(% &
)& '
;' (
item  
=! "
DeserializeJson# 2
.2 3
	GetObject3 <
<< =
T= >
>> ?
(? @
json@ D
.D E
ResultE K
)K L
;L M
} 
) 
; 
request 
. 
Wait  
(  !
)! "
;" #
} 
} 
return!! 
item!! 
;!! 
}"" 	
}## 
}$$ ê
LD:\Sources\dotNetLab\puma-prey\Common\Validation\Attributes\NameAttribute.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 

Validation %
{		 
[

 
AttributeUsage

 
(

 
AttributeTargets

 $
.

$ %
Property

% -
,

- .
AllowMultiple

/ <
=

= >
false

? D
,

D E
	Inherited

F O
=

P Q
true

R V
)

V W
]

W X
public 

class 
NameAttribute 
:  
ValidationAttribute! 4
{ 
private 
const 
string 
_ERROR_MESSAGE +
=, -
$str. P
;P Q
public 
NameAttribute 
( 
) 
:  
base! %
(% &
_ERROR_MESSAGE& 4
)4 5
{ 	
} 	
	protected 
override 
ValidationResult +
IsValid, 3
(3 4
object4 :
value; @
,@ A
ValidationContextB S
validationContextT e
)e f
{ 	
if 
( 
value 
!= 
null 
) 
{ 
bool 
isValid 
= 
false $
;$ %
if 
( 
! 
isValid 
) 
return 
new 
ValidationResult .
(. /
FormatErrorMessage/ A
(A B
validationContextB S
.S T
DisplayNameT _
)_ `
)` a
;a b
} 
return 
ValidationResult #
.# $
Success$ +
;+ ,
} 	
public   
override   
string   
FormatErrorMessage   1
(  1 2
string  2 8
name  9 =
)  = >
{!! 	
return"" 
string"" 
."" 
Format""  
(""  !
_ERROR_MESSAGE""! /
,""/ 0
name""1 5
)""5 6
;""6 7
}## 	
}$$ 
}%% ≤	
DD:\Sources\dotNetLab\puma-prey\Common\Deserialize\JsonDeserialize.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Deserialize &
{		 
public

 

class

 
DeserializeJson

  
{ 
public 
static 
T 
	GetObject !
<! "
T" #
># $
($ %
string% +
json, 0
)0 1
where2 7
T8 9
:: ;
new< ?
(? @
)@ A
{ 	"
JsonSerializerSettings "
settings# +
=, -
new. 1"
JsonSerializerSettings2 H
(H I
)I J
{ 
TypeNameHandling  
=! "
TypeNameHandling# 3
.3 4
All4 7
} 
; 
return 
JsonConvert 
. 
DeserializeObject 0
<0 1
T1 2
>2 3
(3 4
json4 8
,8 9
settings: B
)B C
;C D
} 	
} 
} †
6D:\Sources\dotNetLab\puma-prey\Common\Report\Report.cs
	namespace		 	
Puma		
 
.		 
Prey		 
.		 
Common		 
{

 
public 

class 
Report 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
	Timestamp !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
Decimal 
Cost 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Size 
{ 
get 
; 
set "
;" #
}$ %
public 

Dictionary 
< 
string  
,  !
string" (
>( )
MetaData* 2
;2 3
public 
static 
Report 
	GetReport &
(& '
Guid' +
userId, 2
)2 3
{ 	
return 

RestClient 
. 
Get !
<! "
Report" (
>( )
() *
$"* ,
$str, 3
{3 4
userId4 :
}: ;
"; <
)< =
;= >
} 	
public 
static 
Report !
GetReportFromProvider 2
(2 3
Guid3 7
userId8 >
)> ?
{ 	
HttpResponse   
<   
Report   
>    
jsonResponse  ! -
=  . /
Unirest  0 7
.  7 8
post  8 <
(  < =
$str  = d
)  d e
.!! 
header!! 
(!! 
$str!! 
,!! 
$str!!  2
)!!2 3
."" 
field"" 
("" 
$str"" 
,"" 
userId"" %
)""% &
.## 
asJson## 
<## 
Report## 
>## 
(## 
)## 
;##  
return%% 
jsonResponse%% 
.%%  
Body%%  $
;%%$ %
}&& 	
public(( 
static(( 
Report(( 
	GetReport(( &
(((& '
string((' -
lanId((. 3
)((3 4
{)) 	
return** 

RestClient** 
.** 
Get** !
<**! "
Report**" (
>**( )
(**) *
$"*** ,
$str**, 3
{**3 4
lanId**4 9
}**9 :
"**: ;
)**; <
;**< =
}++ 	
},, 
}--  

4D:\Sources\dotNetLab\puma-prey\Common\Logging\Log.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Logging "
{ 
public 

static 
class 
Log 
{ 
private 
static 
readonly 
Logger  &
log' *
=+ ,

LogManager- 7
.7 8!
GetCurrentClassLogger8 M
(M N
)N O
;O P
public

 
static

 
void

 
Info

 
(

  
string

  &
message

' .
)

. /
{ 	
log 
. 
Info 
( 
message 
) 
; 
} 	
public 
static 
void 
Info 
(  
Guid  $
	errorCode% .
,. /
	Exception0 9
ex: <
)< =
{ 	
log 
. 
Info 
( 
string 
. 
Format "
(" #
$str# -
,- .
	errorCode/ 8
,8 9
ex: <
)< =
)= >
;> ?
} 	
} 
} √
FD:\Sources\dotNetLab\puma-prey\Common\Deserialize\BinaryDeserialize.cs
	namespace		 	
Puma		
 
.		 
Prey		 
.		 
Common		 
.		 
Deserialize		 &
{

 
public 

class 
BinaryDeserialize "
{ 
public 
static 
T 
	GetObject !
<! "
T" #
># $
($ %
byte% )
[) *
]* +
bytes, 1
)1 2
where3 8
T9 :
:; <
new= @
(@ A
)A B
{ 	
using 
( 
MemoryStream 
stream  &
=' (
new) ,
MemoryStream- 9
(9 :
): ;
); <
{ 
stream 
. 
Write 
( 
bytes "
," #
$num$ %
,% &
bytes' ,
., -
Length- 3
)3 4
;4 5
BinaryFormatter 
	formatter  )
=* +
new, /
BinaryFormatter0 ?
(? @
)@ A
;A B
return 
( 
T 
) 
	formatter #
.# $
Deserialize$ /
(/ 0
stream0 6
)6 7
;7 8
} 
} 	
} 
} ‡
2D:\Sources\dotNetLab\puma-prey\Common\Data\Ldap.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Data 
{ 
public 

class 
Ldap 
{		 
private

 
const

 
string

 
_SA_USER_ID

 (
=

) *
$str

+ 9
;

9 :
private 
const 
string 
_SA_PASSWORD )
=* +
$str, =
;= >
public 
string 
FindUser 
( 
string %
username& .
). /
{ 	
DirectoryEntry 
entry  
=! "
new# &
DirectoryEntry' 5
(5 6
$str6 ]
,] ^
_SA_USER_ID_ j
,j k
_SA_PASSWORDl x
)x y
;y z
DirectorySearcher 
searcher &
=' (
new) ,
DirectorySearcher- >
(> ?
entry? D
)D E
;E F
searcher 
. 
SearchScope  
=! "
SearchScope# .
.. /
Subtree/ 6
;6 7
searcher 
. 
Filter 
= 
$"  
$str  8
{8 9
username9 A
}A B
$strB C
"C D
;D E
SearchResult 
result 
=  !
searcher" *
.* +
FindOne+ 2
(2 3
)3 4
;4 5
return 
result 
? 
. 
GetDirectoryEntry ,
(, -
)- .
?. /
./ 0
Username0 8
;8 9
} 	
} 
} Ì
8D:\Sources\dotNetLab\puma-prey\Common\Data\DataAccess.cs
	namespace		 	
Puma		
 
.		 
Prey		 
.		 
Common		 
.		 
Data		 
{

 
public 

class 

DataAccess 
{ 
public 
static 
bool 
HuntIsValid &
(& '
string' -
id. 0
)0 1
{ 	
SqlConnection 
cn 
= 
new 
SqlConnection '
(' ( 
ConfigurationManager( <
.< =
ConnectionStrings= N
[N O
$strO i
]i j
.j k
ConnectionStringk {
){ |
;| }
try 
{ 
if 
( 
! 
Int32 
. 
TryParse #
(# $
id$ &
,& '
out( +
int, /
cID0 3
)3 4
)4 5
{ 
return 
false 
; 
}  !
cn 
. 
Open 
( 
) 
; 

SqlCommand 
cmd 
=  
new! $

SqlCommand% /
(/ 0
$str0 W
+X Y
cIDZ ]
.] ^
ToString^ f
(f g
)g h
+i j
$strk |
,| }
cn	~ Ä
)
Ä Å
;
Å Ç
string 
result 
= 
cmd  #
.# $
ExecuteScalar$ 1
(1 2
)2 3
.3 4
ToString4 <
(< =
)= >
;> ?
if 
( 
Int32 
. 
TryParse 
( 
result 
, 
out "
int# &
count' ,
), -
&&. 0
count1 6
>7 8
$num9 :
): ;
{ 
return 
true 
; 
} 
return 

false 
; 
} 
finally 
{   
if!! 
(!! 
cn!! 
.!! 
State!! 
!=!! 
System!!  &
.!!& '
Data!!' +
.!!+ ,
ConnectionState!!, ;
.!!; <
Closed!!< B
)!!B C
{!!D E
cn!!F H
.!!H I
Close!!I N
(!!N O
)!!O P
;!!P Q
}!!R S
}"" 
}## 	
}$$ 
}%% ﬁ
<D:\Sources\dotNetLab\puma-prey\Common\Cryptography\Random.cs
	namespace		 	
Puma		
 
.		 
Prey		 
.		 
Common		 
.		 
Cryptography		 '
{

 
public 

class 
Random 
{ 
public 
static 
byte 
[ 
] %
GenerateCrytpoRandomBytes 6
(6 7
int7 :
bytes; @
)@ A
{ 	
byte 
[ 
] 
numbers 
= 
new  
byte! %
[% &
bytes& +
]+ ,
;, -
System 
. 
Random 
random  
=! "
new# &
System' -
.- .
Random. 4
(4 5
)5 6
;6 7
random 
. 
	NextBytes 
( 
numbers $
)$ %
;% &
return 
numbers 
; 
} 	
} 
} ˝
?D:\Sources\dotNetLab\puma-prey\Common\Data\ConnectionStrings.cs
	namespace 	
Sans
 
. 
Security 
. 
Cryptography $
{ 
internal		 
class		 
ConnectionStrings		 $
{

 
public 
static 
readonly 
string %
ASPNETDB_CONNECTION& 9
=: ;
$str	< ô
;
ô ö
public 
static 
readonly 
string %
FOX_CONNECTION& 4
=5 6
$str	7 ç
;
ç é
} 
} Å#
UD:\Sources\dotNetLab\puma-prey\Common\Cryptography\KeyManagement\ProtectedKeyCache.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Cryptography '
.' (
KeyManagement( 5
{ 
public

 
class

 
ProtectedKeyCache

 
{ 
private 
readonly 

Dictionary #
<# $
string$ *
,* +
ProtectedKey, 8
>8 9
cache: ?
=@ A
newB E

DictionaryF P
<P Q
stringQ W
,W X
ProtectedKeyY e
>e f
(f g
)g h
;h i
public 
ProtectedKey 
this  
[  !
string! '
keyFileName( 3
]3 4
{ 	
get 
{ 
if 
( 
string 
. 
IsNullOrEmpty (
(( )
keyFileName) 4
)4 5
)5 6
{ 
throw 
new 
ArgumentException /
(/ 0
$str0 =
)= >
;> ?
} 

Dictionary 
< 
string !
,! "
ProtectedKey# /
>/ 0
obj1 4
;4 5
Monitor 
. 
Enter 
( 
obj !
=" #
this$ (
.( )
cache) .
). /
;/ 0
ProtectedKey 
result #
;# $
try 
{ 
result 
= 
( 
this "
." #
cache# (
.( )
ContainsKey) 4
(4 5
keyFileName5 @
)@ A
?B C
thisD H
.H I
cacheI N
[N O
keyFileNameO Z
]Z [
:\ ]
null^ b
)b c
;c d
}   
finally!! 
{"" 
Monitor## 
.## 
Exit##  
(##  !
obj##! $
)##$ %
;##% &
}$$ 
return%% 
result%% 
;%% 
}&& 
set'' 
{(( 
if)) 
()) 
value)) 
==)) 
null)) !
)))! "
{** 
throw++ 
new++ !
ArgumentNullException++ 3
(++3 4
$str++4 ;
)++; <
;++< =
},, 
if-- 
(-- 
string-- 
.-- 
IsNullOrEmpty-- (
(--( )
keyFileName--) 4
)--4 5
)--5 6
{.. 
throw// 
new// 
ArgumentException// /
(/// 0
$str//0 =
)//= >
;//> ?
}00 

Dictionary11 
<11 
string11 !
,11! "
ProtectedKey11# /
>11/ 0
obj111 4
;114 5
Monitor22 
.22 
Enter22 
(22 
obj22 !
=22" #
this22$ (
.22( )
cache22) .
)22. /
;22/ 0
try33 
{44 
this55 
.55 
cache55 
[55 
keyFileName55 *
]55* +
=55, -
value55. 3
;553 4
}66 
finally77 
{88 
Monitor99 
.99 
Exit99  
(99  !
obj99! $
)99$ %
;99% &
}:: 
};; 
}<< 	
publicAA 
voidAA 
ClearAA 
(AA 
)AA 
{BB 	

DictionaryCC 
<CC 
stringCC 
,CC 
ProtectedKeyCC +
>CC+ ,
objCC- 0
;CC0 1
MonitorDD 
.DD 
EnterDD 
(DD 
objDD 
=DD 
thisDD  $
.DD$ %
cacheDD% *
)DD* +
;DD+ ,
tryEE 
{FF 
thisGG 
.GG 
cacheGG 
.GG 
ClearGG  
(GG  !
)GG! "
;GG" #
}HH 
finallyII 
{JJ 
MonitorKK 
.KK 
ExitKK 
(KK 
objKK  
)KK  !
;KK! "
}LL 
}MM 	
}NN 
}OO ·
PD:\Sources\dotNetLab\puma-prey\Common\Cryptography\KeyManagement\ProtectedKey.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Cryptography '
.' (
KeyManagement( 5
{ 
public 

class 
ProtectedKey 
{ 
private 
byte 
[ 
] 
protectedKey #
;# $
private		 
DataProtectionScope		 #
protectionScope		$ 3
;		3 4
public 
byte 
[ 
] 
EncryptedKey "
{ 	
get 
{ 
return 
( 
byte 
[ 
] 
) 
this #
.# $
protectedKey$ 0
.0 1
Clone1 6
(6 7
)7 8
;8 9
} 
} 	
public 
byte 
[ 
] 
DecryptedKey "
{ 	
get 
{ 
return 
this 
. 
	Unprotect %
(% &
)& '
;' (
} 
}   	
public** 
static** 
ProtectedKey** ""
CreateFromPlaintextKey**# 9
(**9 :
byte**: >
[**> ?
]**? @
plaintextKey**A M
,**M N
DataProtectionScope**O b
dataProtectionScope**c v
)**v w
{++ 	
byte,, 
[,, 
],, 
array,, 
=,, 
ProtectedData,, (
.,,( )
Protect,,) 0
(,,0 1
plaintextKey,,1 =
,,,= >
null,,? C
,,,C D
dataProtectionScope,,E X
),,X Y
;,,Y Z
return-- 
new-- 
ProtectedKey-- #
(--# $
array--$ )
,--) *
dataProtectionScope--+ >
)--> ?
;--? @
}.. 	
public66 
static66 
ProtectedKey66 ""
CreateFromEncryptedKey66# 9
(669 :
byte66: >
[66> ?
]66? @
encryptedKey66A M
,66M N
DataProtectionScope66O b
dataProtectionScope66c v
)66v w
{77 	
return88 
new88 
ProtectedKey88 #
(88# $
encryptedKey88$ 0
,880 1
dataProtectionScope882 E
)88E F
;88F G
}99 	
public@@ 
virtual@@ 
byte@@ 
[@@ 
]@@ 
	Unprotect@@ '
(@@' (
)@@( )
{AA 	
returnBB 
ProtectedDataBB  
.BB  !
	UnprotectBB! *
(BB* +
thisBB+ /
.BB/ 0
protectedKeyBB0 <
,BB< =
nullBB> B
,BBB C
thisBBD H
.BBH I
protectionScopeBBI X
)BBX Y
;BBY Z
}CC 	
privateEE 
ProtectedKeyEE 
(EE 
byteEE !
[EE! "
]EE" #
protectedKeyEE$ 0
,EE0 1
DataProtectionScopeEE2 E
protectionScopeEEF U
)EEU V
{FF 	
thisGG 
.GG 
protectionScopeGG  
=GG! "
protectionScopeGG# 2
;GG2 3
thisHH 
.HH 
protectedKeyHH 
=HH 
protectedKeyHH  ,
;HH, -
}II 	
}JJ 
}KK ˛
MD:\Sources\dotNetLab\puma-prey\Common\Cryptography\KeyManagement\KeyServer.cs
	namespace		 	
Puma		
 
.		 
Prey		 
.		 
Common		 
.		 
Cryptography		 '
.		' (
KeyManagement		( 5
{

 
public 

class 
	KeyServer 
{ 
public 
static 
string 
GetKey #
(# $
int$ '
id( *
)* +
{ 	
HttpWebRequest 
request "
=# $
null% )
;) *
HttpWebResponse 
response $
=% &
null' +
;+ ,
Stream 
s 
= 
null 
; 
StreamReader 
reader 
=  !
null" &
;& '
try 
{ 
request 
= 
HttpWebRequest (
.( )
Create) /
(/ 0
string0 6
.6 7
Format7 =
(= >
$str> e
,e f
idg i
)i j
)j k
asl n
HttpWebRequesto }
;} ~
string 
basicHeader "
=# $
string% +
.+ ,
Format, 2
(2 3
$str3 >
,> ?
Convert@ G
.G H
ToBase64StringH V
(V W
EncodingW _
._ `
UTF8` d
.d e
GetBytese m
(m n
$strn ~
)~ 
)	 Ä
)
Ä Å
;
Å Ç
request 
. 
Headers 
.  
Add  #
(# $
$str$ 3
,3 4
basicHeader5 @
)@ A
;A B
response 
= 
request "
." #
GetResponse# .
(. /
)/ 0
as1 3
HttpWebResponse4 C
;C D
s 
= 
response 
. 
GetResponseStream .
(. /
)/ 0
;0 1
reader 
= 
new 
StreamReader )
() *
s* +
)+ ,
;, -
string 
key 
= 
reader #
.# $
	ReadToEnd$ -
(- .
). /
;/ 0
return 
key 
; 
} 
catch 
( 
	Exception 
ex 
)  
{   
throw!! 
ex!! 
;!! 
}"" 
finally## 
{$$ 
if%% 
(%% 
request%% 
!=%% 
null%% #
)%%# $
request&& 
=&& 
null&& "
;&&" #
if(( 
((( 
response(( 
!=(( 
null((  $
)(($ %
response)) 
.)) 
Close)) "
())" #
)))# $
;))$ %
if++ 
(++ 
s++ 
!=++ 
null++ 
)++ 
s,, 
.,, 
Close,, 
(,, 
),, 
;,, 
if.. 
(.. 
reader.. 
!=.. 
null.. "
).." #
reader// 
.// 
Close//  
(//  !
)//! "
;//" #
}00 
}11 	
}22 
}33 ãÄ
SD:\Sources\dotNetLab\puma-prey\Common\Cryptography\KeyManagement\KeyReaderWriter.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Cryptography '
.' (
KeyManagement( 5
{ 
public 
class 
KeyReaderWriter 
: 

IKeyReader  *
,* +

IKeyWriter, 6
{ 
internal 
const 
int 
versionNumber (
=) *
$num+ /
;/ 0
internal 
const 
int 
versionNumberLength .
=/ 0
$num1 2
;2 3
public 
ProtectedKey 
Read  
(  !
Stream! '
protectedKeyStream( :
,: ;
DataProtectionScope< O
protectionScopeP _
)_ `
{ 	
this 
. 
ValidateKeyVersion #
(# $
protectedKeyStream$ 6
)6 7
;7 8
return 
ProtectedKey 
.  "
CreateFromEncryptedKey  6
(6 7
this7 ;
.; <
ReadEncryptedKey< L
(L M
protectedKeyStreamM _
)_ `
,` a
protectionScopeb q
)q r
;r s
} 	
public(( 
ProtectedKey(( 
Restore(( #
(((# $
Stream(($ *
protectedKeyStream((+ =
,((= >
string((? E

passphrase((F P
,((P Q
DataProtectionScope((R e
protectionScope((f u
)((u v
{)) 	
return** 
this** 
.** 

ProtectKey** "
(**" #
this**# '
.**' (
Restore**( /
(**/ 0
protectedKeyStream**0 B
,**B C

passphrase**D N
)**N O
,**O P
protectionScope**Q `
)**` a
;**a b
}++ 	
public55 
byte55 
[55 
]55 
Restore55 
(55 
Stream55 $
protectedKeyStream55% 7
,557 8
string559 ?

passphrase55@ J
)55J K
{66 	
this77 
.77 
ValidateKeyVersion77 #
(77# $
protectedKeyStream77$ 6
)776 7
;777 8
byte88 
[88 
]88 
array88 
=88 
new88 
byte88 #
[88# $
$num88$ &
]88& '
;88' (
byte99 
[99 
]99 
array299 
=99 
new99 
byte99  $
[99$ %
protectedKeyStream99% 7
.997 8
Length998 >
-99? @
$num99A C
-99D E
(99F G
long99G K
)99K L
array99L Q
.99Q R
Length99R X
]99X Y
;99Y Z
protectedKeyStream:: 
.:: 
Read:: #
(::# $
array::$ )
,::) *
$num::+ ,
,::, -
array::. 3
.::3 4
Length::4 :
)::: ;
;::; <
protectedKeyStream;; 
.;; 
Read;; #
(;;# $
array2;;$ *
,;;* +
$num;;, -
,;;- .
array2;;/ 5
.;;5 6
Length;;6 <
);;< =
;;;= >
return<< 
this<< 
.<<  
DecryptKeyForRestore<< ,
(<<, -

passphrase<<- 7
,<<7 8
array2<<9 ?
,<<? @
array<<A F
)<<F G
;<<G H
}== 	
publicEE 
voidEE 
WriteEE 
(EE 
StreamEE  
outputStreamEE! -
,EE- .
ProtectedKeyEE/ ;
keyEE< ?
)EE? @
{FF 	
thisGG 
.GG 
WriteVersionNumberGG #
(GG# $
outputStreamGG$ 0
,GG0 1
$numGG2 6
)GG6 7
;GG7 8
thisHH 
.HH 
WriteEncryptedKeyHH "
(HH" #
outputStreamHH# /
,HH/ 0
keyHH1 4
)HH4 5
;HH5 6
}II 	
publicRR 
voidRR 
ArchiveRR 
(RR 
StreamRR "
outputStreamRR# /
,RR/ 0
ProtectedKeyRR1 =
keyToBeArchivedRR> M
,RRM N
stringRRO U

passphraseRRV `
)RR` a
{SS 	
ifTT 
(TT 
outputStreamTT 
==TT 
nullTT  $
)TT$ %
{UU 
throwVV 
newVV !
ArgumentNullExceptionVV /
(VV/ 0
$strVV0 >
)VV> ?
;VV? @
}WW 
byteXX 
[XX 
]XX 
bytesXX 
=XX 
BitConverterXX '
.XX' (
GetBytesXX( 0
(XX0 1
$numXX1 5
)XX5 6
;XX6 7
byteYY 
[YY 
]YY 
arrayYY 
=YY 
thisYY 
.YY  
GenerateSaltYY  ,
(YY, -
)YY- .
;YY. /
byteZZ 
[ZZ 
]ZZ 
encryptedKeyZZ 
=ZZ  !
thisZZ" &
.ZZ& '
GetEncryptedKeyZZ' 6
(ZZ6 7
keyToBeArchivedZZ7 F
,ZZF G

passphraseZZH R
,ZZR S
arrayZZT Y
)ZZY Z
;ZZZ [
outputStream[[ 
.[[ 
Write[[ 
([[ 
bytes[[ $
,[[$ %
$num[[& '
,[[' (
bytes[[) .
.[[. /
Length[[/ 5
)[[5 6
;[[6 7
outputStream\\ 
.\\ 
Write\\ 
(\\ 
array\\ $
,\\$ %
$num\\& '
,\\' (
array\\) .
.\\. /
Length\\/ 5
)\\5 6
;\\6 7
outputStream]] 
.]] 
Write]] 
(]] 
encryptedKey]] +
,]]+ ,
$num]]- .
,]]. /
encryptedKey]]0 <
.]]< =
Length]]= C
)]]C D
;]]D E
}^^ 	
private`` 
byte`` 
[`` 
]`` 
GetEncryptedKey`` &
(``& '
ProtectedKey``' 3
keyToBeArchived``4 C
,``C D
string``E K

passphrase``L V
,``V W
byte``X \
[``\ ]
]``] ^
salt``_ c
)``c d
{aa 	
bytebb 
[bb 
]bb 
decryptedKeybb 
=bb  !
keyToBeArchivedbb" 1
.bb1 2
DecryptedKeybb2 >
;bb> ?
bytecc 
[cc 
]cc 
resultcc 
;cc 
trydd 
{ee 
resultff 
=ff 
thisff 
.ff !
EncryptKeyForArchivalff 3
(ff3 4
decryptedKeyff4 @
,ff@ A

passphraseffB L
,ffL M
saltffN R
)ffR S
;ffS T
}gg 
finallyhh 
{ii 
Utilityjj 
.jj 
ZeroOutBytesjj $
(jj$ %
decryptedKeyjj% 1
)jj1 2
;jj2 3
}kk 
returnll 
resultll 
;ll 
}mm 	
privateoo 
byteoo 
[oo 
]oo 
GenerateSaltoo #
(oo# $
)oo$ %
{pp 	
returnqq 
Randomqq 
.qq %
GenerateCrytpoRandomBytesqq 3
(qq3 4
$numqq4 6
)qq6 7
;qq7 8
}rr 	
privatett 
bytett 
[tt 
]tt !
EncryptKeyForArchivaltt ,
(tt, -
bytett- 1
[tt1 2
]tt2 3
keyToExporttt4 ?
,tt? @
stringttA G

passphrasettH R
,ttR S
bytettT X
[ttX Y
]ttY Z
salttt[ _
)tt_ `
{uu 	
RijndaelManagedvv 
rijndaelManagedvv +
=vv, -
newvv. 1
RijndaelManagedvv2 A
(vvA B
)vvB C
;vvC D
byteww 
[ww 
]ww 
rgbKeyww 
=ww 
thisww  
.ww  !
GenerateArchivalKeyww! 4
(ww4 5
rijndaelManagedww5 D
,wwD E

passphrasewwF P
,wwP Q
saltwwR V
)wwV W
;wwW X
bytexx 
[xx 
]xx 
rgbIVxx 
=xx 
newxx 
bytexx #
[xx# $
rijndaelManagedxx$ 3
.xx3 4
	BlockSizexx4 =
/xx> ?
$numxx@ A
]xxA B
;xxB C
returnyy 
Utilityyy 
.yy 
	Transformyy $
(yy$ %
rijndaelManagedyy% 4
.yy4 5
CreateEncryptoryy5 D
(yyD E
rgbKeyyyE K
,yyK L
rgbIVyyM R
)yyR S
,yyS T
keyToExportyyU `
)yy` a
;yya b
}zz 	
private|| 
void|| 
WriteEncryptedKey|| &
(||& '
Stream||' -
outputStream||. :
,||: ;
ProtectedKey||< H
key||I L
)||L M
{}} 	
outputStream~~ 
.~~ 
Write~~ 
(~~ 
key~~ "
.~~" #
EncryptedKey~~# /
,~~/ 0
$num~~1 2
,~~2 3
key~~4 7
.~~7 8
EncryptedKey~~8 D
.~~D E
Length~~E K
)~~K L
;~~L M
} 	
private
ÅÅ 
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 
ReadEncryptedKey
ÅÅ '
(
ÅÅ' (
Stream
ÅÅ( . 
protectedKeyStream
ÅÅ/ A
)
ÅÅA B
{
ÇÇ 	
byte
ÉÉ 
[
ÉÉ 
]
ÉÉ 
array
ÉÉ 
=
ÉÉ 
new
ÉÉ 
byte
ÉÉ #
[
ÉÉ# $ 
protectedKeyStream
ÉÉ$ 6
.
ÉÉ6 7
Length
ÉÉ7 =
-
ÉÉ> ?
$num
ÉÉ@ B
]
ÉÉB C
;
ÉÉC D 
protectedKeyStream
ÑÑ 
.
ÑÑ 
Read
ÑÑ #
(
ÑÑ# $
array
ÑÑ$ )
,
ÑÑ) *
$num
ÑÑ+ ,
,
ÑÑ, -
array
ÑÑ. 3
.
ÑÑ3 4
Length
ÑÑ4 :
)
ÑÑ: ;
;
ÑÑ; <
return
ÖÖ 
array
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
private
àà 
void
àà  
WriteVersionNumber
àà '
(
àà' (
Stream
àà( .
outputStream
àà/ ;
,
àà; <
int
àà= @
versionNumber
ààA N
)
ààN O
{
ââ 	
byte
ää 
[
ää 
]
ää 
bytes
ää 
=
ää 
BitConverter
ää '
.
ää' (
GetBytes
ää( 0
(
ää0 1
versionNumber
ää1 >
)
ää> ?
;
ää? @
outputStream
ãã 
.
ãã 
Write
ãã 
(
ãã 
bytes
ãã $
,
ãã$ %
$num
ãã& '
,
ãã' (
bytes
ãã) .
.
ãã. /
Length
ãã/ 5
)
ãã5 6
;
ãã6 7
}
åå 	
private
éé 
uint
éé 
ReadVersionNumber
éé &
(
éé& '
Stream
éé' - 
protectedKeyStream
éé. @
)
éé@ A
{
èè 	
byte
êê 
[
êê 
]
êê 
array
êê 
=
êê 
new
êê 
byte
êê #
[
êê# $
$num
êê$ %
]
êê% &
;
êê& ' 
protectedKeyStream
ëë 
.
ëë 
Read
ëë #
(
ëë# $
array
ëë$ )
,
ëë) *
$num
ëë+ ,
,
ëë, -
array
ëë. 3
.
ëë3 4
Length
ëë4 :
)
ëë: ;
;
ëë; <
return
íí 
BitConverter
íí 
.
íí  
ToUInt32
íí  (
(
íí( )
array
íí) .
,
íí. /
$num
íí0 1
)
íí1 2
;
íí2 3
}
ìì 	
private
ïï 
void
ïï  
ValidateKeyVersion
ïï '
(
ïï' (
Stream
ïï( . 
protectedKeyStream
ïï/ A
)
ïïA B
{
ññ 	
uint
óó 
num
óó 
=
óó 
this
óó 
.
óó 
ReadVersionNumber
óó -
(
óó- . 
protectedKeyStream
óó. @
)
óó@ A
;
óóA B
if
òò 
(
òò 
num
òò 
!=
òò 
$num
òò 
)
òò 
{
ôô 
throw
öö 
new
öö '
InvalidOperationException
öö 3
(
öö3 4
$str
öö4 L
)
ööL M
;
ööM N
}
õõ 
}
úú 	
private
ûû 
byte
ûû 
[
ûû 
]
ûû !
GenerateArchivalKey
ûû *
(
ûû* + 
SymmetricAlgorithm
ûû+ =)
archivalEncryptionAlgorithm
ûû> Y
,
ûûY Z
string
ûû[ a

passphrase
ûûb l
,
ûûl m
byte
ûûn r
[
ûûr s
]
ûûs t
salt
ûûu y
)
ûûy z
{
üü 	 
Rfc2898DeriveBytes
††  
rfc2898DeriveBytes
†† 1
=
††2 3
new
††4 7 
Rfc2898DeriveBytes
††8 J
(
††J K

passphrase
††K U
,
††U V
salt
††W [
)
††[ \
;
††\ ]
return
°°  
rfc2898DeriveBytes
°° %
.
°°% &
GetBytes
°°& .
(
°°. /)
archivalEncryptionAlgorithm
°°/ J
.
°°J K
KeySize
°°K R
/
°°S T
$num
°°U V
)
°°V W
;
°°W X
}
¢¢ 	
private
§§ 
byte
§§ 
[
§§ 
]
§§ "
DecryptKeyForRestore
§§ +
(
§§+ ,
string
§§, 2

passphrase
§§3 =
,
§§= >
byte
§§? C
[
§§C D
]
§§D E
encryptedKey
§§F R
,
§§R S
byte
§§T X
[
§§X Y
]
§§Y Z
salt
§§[ _
)
§§_ `
{
•• 	
RijndaelManaged
¶¶ 
rijndaelManaged
¶¶ +
=
¶¶, -
new
¶¶. 1
RijndaelManaged
¶¶2 A
(
¶¶A B
)
¶¶B C
;
¶¶C D
byte
ßß 
[
ßß 
]
ßß 
array
ßß 
=
ßß 
this
ßß 
.
ßß  !
GenerateArchivalKey
ßß  3
(
ßß3 4
rijndaelManaged
ßß4 C
,
ßßC D

passphrase
ßßE O
,
ßßO P
salt
ßßQ U
)
ßßU V
;
ßßV W
byte
®® 
[
®® 
]
®® 
rgbIV
®® 
=
®® 
new
®® 
byte
®® #
[
®®# $
rijndaelManaged
®®$ 3
.
®®3 4
	BlockSize
®®4 =
/
®®> ?
$num
®®@ A
]
®®A B
;
®®B C
byte
©© 
[
©© 
]
©© 
result
©© 
=
©© 
Utility
©© #
.
©©# $
	Transform
©©$ -
(
©©- .
rijndaelManaged
©©. =
.
©©= >
CreateDecryptor
©©> M
(
©©M N
array
©©N S
,
©©S T
rgbIV
©©U Z
)
©©Z [
,
©©[ \
encryptedKey
©©] i
)
©©i j
;
©©j k
Utility
™™ 
.
™™ 
ZeroOutBytes
™™  
(
™™  !
array
™™! &
)
™™& '
;
™™' (
return
´´ 
result
´´ 
;
´´ 
}
¨¨ 	
private
ÆÆ 
ProtectedKey
ÆÆ 

ProtectKey
ÆÆ '
(
ÆÆ' (
byte
ÆÆ( ,
[
ÆÆ, -
]
ÆÆ- .
decryptedKey
ÆÆ/ ;
,
ÆÆ; <!
DataProtectionScope
ÆÆ= P
protectionScope
ÆÆQ `
)
ÆÆ` a
{
ØØ 	
ProtectedKey
∞∞ 
result
∞∞ 
=
∞∞  !
ProtectedKey
∞∞" .
.
∞∞. /$
CreateFromPlaintextKey
∞∞/ E
(
∞∞E F
decryptedKey
∞∞F R
,
∞∞R S
protectionScope
∞∞T c
)
∞∞c d
;
∞∞d e
Utility
±± 
.
±± 
ZeroOutBytes
±±  
(
±±  !
decryptedKey
±±! -
)
±±- .
;
±±. /
return
≤≤ 
result
≤≤ 
;
≤≤ 
}
≥≥ 	
}
¥¥ 
}µµ ∫
ND:\Sources\dotNetLab\puma-prey\Common\Cryptography\KeyManagement\IKeyWriter.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Cryptography '
.' (
KeyManagement( 5
{ 
public

 
	interface

 

IKeyWriter

 
{ 
void 
Write 
( 
Stream 
outputStream &
,& '
ProtectedKey( 4
key5 8
)8 9
;9 :
void 
Archive 
( 
Stream 
outputStream (
,( )
ProtectedKey* 6
key7 :
,: ;
string< B

passphraseC M
)M N
;N O
} 
} û?
ND:\Sources\dotNetLab\puma-prey\Common\Cryptography\KeyManagement\KeyManager.cs
	namespace		 	
Puma		
 
.		 
Prey		 
.		 
Common		 
.		 
Cryptography		 '
.		' (
KeyManagement		( 5
{

 
public 

class 

KeyManager 
{ 
private 
static 
readonly 
ProtectedKeyCache  1
cache2 7
=8 9
new: =
ProtectedKeyCache> O
(O P
)P Q
;Q R
public 
static 
void 

ArchiveKey %
(% &
Stream& ,
outputStream- 9
,9 :
ProtectedKey; G
keyToArchiveH T
,T U
stringV \

passphrase] g
)g h
{ 	

IKeyWriter 
	keyWriter  
=! "
new# &
KeyReaderWriter' 6
(6 7
)7 8
;8 9
	keyWriter 
. 
Archive 
( 
outputStream *
,* +
keyToArchive, 8
,8 9

passphrase: D
)D E
;E F
} 	
public 
static 
void 

ClearCache %
(% &
)& '
{   	

KeyManager!! 
.!! 
cache!! 
.!! 
Clear!! "
(!!" #
)!!# $
;!!$ %
}"" 	
public// 
static// 
ProtectedKey// "
Read//# '
(//' (
Stream//( .
inputStream/// :
,//: ;
DataProtectionScope//< O 
dpapiProtectionScope//P d
)//d e
{00 	

IKeyReader11 
	keyReader11  
=11! "
new11# &
KeyReaderWriter11' 6
(116 7
)117 8
;118 9
return22 
	keyReader22 
.22 
Read22 !
(22! "
inputStream22" -
,22- . 
dpapiProtectionScope22/ C
)22C D
;22D E
}33 	
public<< 
static<< 
ProtectedKey<< "
Read<<# '
(<<' (
string<<( . 
protectedKeyFileName<</ C
,<<C D
DataProtectionScope<<E X 
dpapiProtectionScope<<Y m
)<<m n
{== 	
string>> 
fullPath>> 
=>> 
Path>> "
.>>" #
GetFullPath>># .
(>>. / 
protectedKeyFileName>>/ C
)>>C D
;>>D E
if?? 
(?? 

KeyManager?? 
.?? 
cache??  
[??  !
fullPath??! )
]??) *
!=??+ -
null??. 2
)??2 3
{@@ 
returnAA 

KeyManagerAA !
.AA! "
cacheAA" '
[AA' (
fullPathAA( 0
]AA0 1
;AA1 2
}BB 
ProtectedKeyCC 
resultCC 
;CC  
usingDD 
(DD 

FileStreamDD 

fileStreamDD (
=DD) *
newDD+ .

FileStreamDD/ 9
(DD9 : 
protectedKeyFileNameDD: N
,DDN O
FileModeDDP X
.DDX Y
OpenDDY ]
,DD] ^

FileAccessDD_ i
.DDi j
ReadDDj n
,DDn o
	FileShareDDp y
.DDy z
ReadDDz ~
)DD~ 
)	DD Ä
{EE 
ProtectedKeyFF 
protectedKeyFF )
=FF* +

KeyManagerFF, 6
.FF6 7
ReadFF7 ;
(FF; <

fileStreamFF< F
,FFF G 
dpapiProtectionScopeFFH \
)FF\ ]
;FF] ^

KeyManagerGG 
.GG 
cacheGG  
[GG  !
fullPathGG! )
]GG) *
=GG+ ,
protectedKeyGG- 9
;GG9 :
resultHH 
=HH 
protectedKeyHH %
;HH% &
}II 
returnJJ 
resultJJ 
;JJ 
}KK 	
publicUU 
staticUU 
ProtectedKeyUU "

RestoreKeyUU# -
(UU- .
StreamUU. 4
inputStreamUU5 @
,UU@ A
stringUUB H

passphraseUUI S
,UUS T
DataProtectionScopeUUU h
protectionScopeUUi x
)UUx y
{VV 	

IKeyReaderWW 
	keyReaderWW  
=WW! "
newWW# &
KeyReaderWriterWW' 6
(WW6 7
)WW7 8
;WW8 9
returnXX 
	keyReaderXX 
.XX 
RestoreXX $
(XX$ %
inputStreamXX% 0
,XX0 1

passphraseXX2 <
,XX< =
protectionScopeXX> M
)XXM N
;XXN O
}YY 	
publicff 
staticff 
voidff 
Writeff  
(ff  !
Streamff! '
outputStreamff( 4
,ff4 5
byteff6 :
[ff: ;
]ff; <
encryptedKeyff= I
,ffI J
DataProtectionScopeffK ^ 
dpapiProtectionScopeff_ s
)ffs t
{gg 	
ProtectedKeyhh 
keyhh 
=hh 
ProtectedKeyhh +
.hh+ ,"
CreateFromEncryptedKeyhh, B
(hhB C
encryptedKeyhhC O
,hhO P 
dpapiProtectionScopehhQ e
)hhe f
;hhf g

KeyManagerii 
.ii 
Writeii 
(ii 
outputStreamii )
,ii) *
keyii+ .
)ii. /
;ii/ 0
}jj 	
publicrr 
staticrr 
voidrr 
Writerr  
(rr  !
Streamrr! '
outputStreamrr( 4
,rr4 5
ProtectedKeyrr6 B
keyrrC F
)rrF G
{ss 	

IKeyWritertt 
	keyWritertt  
=tt! "
newtt# &
KeyReaderWritertt' 6
(tt6 7
)tt7 8
;tt8 9
	keyWriteruu 
.uu 
Writeuu 
(uu 
outputStreamuu (
,uu( )
keyuu* -
)uu- .
;uu. /
}vv 	
publicxx 
staticxx 
bytexx 
[xx 
]xx 
ReadKeyxx $
(xx$ %
stringxx% +
keyFilexx, 3
,xx3 4
DataProtectionScopexx5 H 
dpapiProtectionScopexxI ]
)xx] ^
{yy 	
ProtectedKey{{ 
key{{ 
={{ 

KeyManager{{ )
.{{) *
Read{{* .
({{. /
keyFile{{/ 6
,{{6 7 
dpapiProtectionScope{{8 L
){{L M
;{{M N
return|| 
key|| 
.|| 
DecryptedKey|| #
;||# $
}}} 	
public 
static 
void 
WriteKey #
(# $
byte$ (
[( )
]) *
key+ .
,. /
string0 6
keyFile7 >
,> ?
DataProtectionScope@ S 
dpapiProtectionScopeT h
)h i
{
ÄÄ 	
using
ÇÇ 
(
ÇÇ 

FileStream
ÇÇ 
fs
ÇÇ  
=
ÇÇ! "
new
ÇÇ# &

FileStream
ÇÇ' 1
(
ÇÇ1 2
keyFile
ÇÇ2 9
,
ÇÇ9 :
FileMode
ÇÇ; C
.
ÇÇC D
Create
ÇÇD J
)
ÇÇJ K
)
ÇÇK L
{
ÉÉ 
ProtectedKey
ÑÑ 
protectedKey
ÑÑ )
=
ÑÑ* +
ProtectedKey
ÑÑ, 8
.
ÑÑ8 9$
CreateFromPlaintextKey
ÑÑ9 O
(
ÑÑO P
key
ÖÖ 
,
ÖÖ "
dpapiProtectionScope
ÖÖ -
)
ÖÖ- .
;
ÖÖ. /

KeyManager
ÜÜ 
.
ÜÜ 
Write
ÜÜ  
(
ÜÜ  !
fs
ÜÜ! #
,
ÜÜ# $
protectedKey
ÜÜ% 1
)
ÜÜ1 2
;
ÜÜ2 3
fs
áá 
.
áá 
Flush
áá 
(
áá 
)
áá 
;
áá 
fs
àà 
.
àà 
Close
àà 
(
àà 
)
àà 
;
àà 
}
ââ 
}
ää 	
}
ãã 
}åå ˜

FD:\Sources\dotNetLab\puma-prey\Common\Cryptography\ExtensionMethods.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Cryptography '
{		 
public

 

static

 
class

 
ExtensionMethods

 (
{ 
public 
static 
string 
ToHexString (
(( )
this) -
byte. 2
[2 3
]3 4
bytes5 :
): ;
{ 	
SoapHexBinary 
shb 
= 
new  #
SoapHexBinary$ 1
(1 2
bytes2 7
)7 8
;8 9
return 
shb 
. 
ToString 
(  
)  !
;! "
} 	
public 
static 
byte 
[ 
] !
GetBytesFromHexString 2
(2 3
this3 7
string8 >
	hexString? H
)H I
{ 	
SoapHexBinary 
shb 
= 
SoapHexBinary  -
.- .
Parse. 3
(3 4
	hexString4 =
)= >
;> ?
return 
shb 
. 
Value 
; 
} 	
} 
} ’
=D:\Sources\dotNetLab\puma-prey\Common\Cryptography\Hashing.cs
	namespace		 	
Puma		
 
.		 
Prey		 
.		 
Common		 
.		 
Cryptography		 '
{

 
public 

class 
Hashing 
{ 
private 
static 
int 
_MIN_SALT_LENGTH +
=, -
$num. 0
;0 1
private 
static 
int  
_MIN_HASH_ITERATIONS /
=0 1
$num2 3
;3 4
public 
static 
byte 
[ 
] 
GenerateHash )
() *
string* 0
input1 6
,6 7
byte8 <
[< =
]= >
salt? C
=D E
nullF J
,J K
intL O

iterationsP Z
=[ \
$num] ^
)^ _
{ 	
if 
( 

iterations 
<  
_MIN_HASH_ITERATIONS 1
)1 2
throw 
new 
ArgumentException +
(+ ,
string, 2
.2 3
Format3 9
(9 :
$str: l
,l m!
_MIN_HASH_ITERATIONS	n Ç
)
Ç É
)
É Ñ
;
Ñ Ö
if 
( 
salt 
!= 
null 
&& 
salt  $
.$ %
Length% +
<, -
_MIN_SALT_LENGTH. >
)> ?
throw 
new 
ArgumentException +
(+ ,
string, 2
.2 3
Format3 9
(9 :
$str: f
,f g
_MIN_SALT_LENGTHh x
)x y
)y z
;z {
byte"" 
["" 
]"" 
pwd"" 
="" 
Encoding"" !
.""! "
UTF8""" &
.""& '
GetBytes""' /
(""/ 0
input""0 5
)""5 6
;""6 7
byte%% 
[%% 
]%% 

inputBytes%% 
=%% 
new%%  #
byte%%$ (
[%%( )
pwd%%) ,
.%%, -
Length%%- 3
+%%4 5
(%%6 7
salt%%7 ;
!=%%< >
null%%? C
?%%D E
salt%%F J
.%%J K
Length%%K Q
:%%R S
$num%%T U
)%%U V
]%%V W
;%%W X
pwd(( 
.(( 
CopyTo(( 
((( 

inputBytes(( !
,((! "
$num((# $
)(($ %
;((% &
if++ 
(++ 
salt++ 
!=++ 
null++ 
)++ 
salt,, 
.,, 
CopyTo,, 
(,, 

inputBytes,, &
,,,& '
pwd,,( +
.,,+ ,
Length,,, 2
),,2 3
;,,3 4
HashAlgorithm// 
hash// 
=//  
new//! $$
MD5CryptoServiceProvider//% =
(//= >
)//> ?
;//? @
byte00 
[00 
]00 
	hashBytes00 
=00 
hash00 #
.00# $
ComputeHash00$ /
(00/ 0

inputBytes000 :
)00: ;
;00; <
for33 
(33 
int33 
i33 
=33 
$num33 
;33 
i33 
<33 

iterations33  *
;33* +
i33, -
++33- /
)33/ 0
	hashBytes44 
=44 
hash44  
.44  !
ComputeHash44! ,
(44, -
	hashBytes44- 6
)446 7
;447 8
return77 
	hashBytes77 
;77 
}88 	
}99 
}:: ‚
ND:\Sources\dotNetLab\puma-prey\Common\Cryptography\KeyManagement\IKeyReader.cs
	namespace 	
Puma
 
. 
Prey 
. 
Common 
. 
Cryptography '
.' (
KeyManagement( 5
{ 
public 

	interface 

IKeyReader 
{ 
ProtectedKey 
Read 
( 
Stream   
protectedKeyContents! 5
,5 6
DataProtectionScope7 J
protectionScopeK Z
)Z [
;[ \
ProtectedKey 
Restore 
( 
Stream # 
protectedKeyContents$ 8
,8 9
string: @

passphraseA K
,K L
DataProtectionScopeM `
protectionScopea p
)p q
;q r
byte   
[   
]   
Restore   
(   
Stream    
protectedKeyContents   2
,  2 3
string  4 :

passphrase  ; E
)  E F
;  F G
}!! 
}"" ¯3
=D:\Sources\dotNetLab\puma-prey\Common\Cryptography\Utility.cs
	namespace		 	
Puma		
 
.		 
Prey		 
.		 
Common		 
.		 
Cryptography		 '
{

 
public 

class 
Utility 
{ 
public 
static 
bool 
CompareBytes '
(' (
byte( ,
[, -
]- .
byte1/ 4
,4 5
byte6 :
[: ;
]; <
byte2= B
)B C
{ 	
if 
( 
byte1 
== 
null 
||  
byte2! &
==' )
null* .
). /
{ 
return 
false 
; 
} 
if 
( 
byte1 
. 
Length 
!= 
byte2  %
.% &
Length& ,
), -
{   
return!! 
false!! 
;!! 
}"" 
bool## 
result## 
=## 
true## 
;## 
for$$ 
($$ 
int$$ 
i$$ 
=$$ 
$num$$ 
;$$ 
i$$ 
<$$ 
byte1$$  %
.$$% &
Length$$& ,
;$$, -
i$$. /
++$$/ 1
)$$1 2
{%% 
if&& 
(&& 
byte1&& 
[&& 
i&& 
]&& 
!=&& 
byte2&&  %
[&&% &
i&&& '
]&&' (
)&&( )
{'' 
result(( 
=(( 
false(( "
;((" #
break)) 
;)) 
}** 
}++ 
return,, 
result,, 
;,, 
}-- 	
public<< 
static<< 
byte<< 
[<< 
]<< 
CombineBytes<< )
(<<) *
byte<<* .
[<<. /
]<</ 0
buffer1<<1 8
,<<8 9
byte<<: >
[<<> ?
]<<? @
buffer2<<A H
)<<H I
{== 	
if>> 
(>> 
buffer1>> 
==>> 
null>> 
)>>  
{?? 
throw@@ 
new@@ !
ArgumentNullException@@ /
(@@/ 0
$str@@0 9
)@@9 :
;@@: ;
}AA 
ifBB 
(BB 
buffer2BB 
==BB 
nullBB 
)BB  
{CC 
throwDD 
newDD !
ArgumentNullExceptionDD /
(DD/ 0
$strDD0 9
)DD9 :
;DD: ;
}EE 
byteFF 
[FF 
]FF 
arrayFF 
=FF 
newFF 
byteFF #
[FF# $
buffer1FF$ +
.FF+ ,
LengthFF, 2
+FF3 4
buffer2FF5 <
.FF< =
LengthFF= C
]FFC D
;FFD E
BufferGG 
.GG 
	BlockCopyGG 
(GG 
buffer1GG $
,GG$ %
$numGG& '
,GG' (
arrayGG) .
,GG. /
$numGG0 1
,GG1 2
buffer1GG3 :
.GG: ;
LengthGG; A
)GGA B
;GGB C
BufferHH 
.HH 
	BlockCopyHH 
(HH 
buffer2HH $
,HH$ %
$numHH& '
,HH' (
arrayHH) .
,HH. /
buffer1HH0 7
.HH7 8
LengthHH8 >
,HH> ?
buffer2HH@ G
.HHG H
LengthHHH N
)HHN O
;HHO P
returnII 
arrayII 
;II 
}JJ 	
publicRR 
staticRR 
voidRR 
ZeroOutBytesRR '
(RR' (
byteRR( ,
[RR, -
]RR- .
bytesRR/ 4
)RR4 5
{SS 	
ifTT 
(TT 
bytesTT 
==TT 
nullTT 
)TT 
{UU 
returnVV 
;VV 
}WW 
ArrayXX 
.XX 
ClearXX 
(XX 
bytesXX 
,XX 
$numXX  
,XX  !
bytesXX" '
.XX' (
LengthXX( .
)XX. /
;XX/ 0
}YY 	
publicbb 
staticbb 
bytebb 
[bb 
]bb 
	Transformbb &
(bb& '
ICryptoTransformbb' 7
	transformbb8 A
,bbA B
bytebbC G
[bbG H
]bbH I
bufferbbJ P
)bbP Q
{cc 	
ifdd 
(dd 
bufferdd 
==dd 
nulldd 
)dd 
{ee 
throwff 
newff !
ArgumentNullExceptionff /
(ff/ 0
$strff0 8
)ff8 9
;ff9 :
}gg 
bytehh 
[hh 
]hh 
resulthh 
=hh 
nullhh  
;hh  !
usingii 
(ii 
MemoryStreamii 
memoryStreamii  ,
=ii- .
newii/ 2
MemoryStreamii3 ?
(ii? @
)ii@ A
)iiA B
{jj 
CryptoStreamkk 
cryptoStreamkk )
=kk* +
nullkk, 0
;kk0 1
tryll 
{mm 
cryptoStreamnn  
=nn! "
newnn# &
CryptoStreamnn' 3
(nn3 4
memoryStreamnn4 @
,nn@ A
	transformnnB K
,nnK L
CryptoStreamModennM ]
.nn] ^
Writenn^ c
)nnc d
;nnd e
cryptoStreamoo  
.oo  !
Writeoo! &
(oo& '
bufferoo' -
,oo- .
$numoo/ 0
,oo0 1
bufferoo2 8
.oo8 9
Lengthoo9 ?
)oo? @
;oo@ A
cryptoStreampp  
.pp  !
FlushFinalBlockpp! 0
(pp0 1
)pp1 2
;pp2 3
resultqq 
=qq 
memoryStreamqq )
.qq) *
ToArrayqq* 1
(qq1 2
)qq2 3
;qq3 4
}rr 
finallyss 
{tt 
ifuu 
(uu 
cryptoStreamuu $
!=uu% '
nulluu( ,
)uu, -
{vv 
cryptoStreamww $
.ww$ %
Closeww% *
(ww* +
)ww+ ,
;ww, -
(xx 
(xx 
IDisposablexx %
)xx% &
cryptoStreamxx& 2
)xx2 3
.xx3 4
Disposexx4 ;
(xx; <
)xx< =
;xx= >
}yy 
}zz 
}{{ 
return|| 
result|| 
;|| 
}}} 	
}~~ 
} øS
@D:\Sources\dotNetLab\puma-prey\Common\Cryptography\Encryption.cs
	namespace

 	
Puma


 
.

 
Prey

 
.

 
Common

 
.

 
Cryptography

 '
{ 
public 

class 

Encryption 
{ 
private 
static 
readonly 
string  &
DEFAULT_KEY' 2
=3 4
$str5 G
;G H
private 
static 
readonly 
string  &

DEFAULT_IV' 1
=2 3
$str4 F
;F G
public 
static 
byte 
[ 
] 
Encrypt $
($ %
string% +
	plainText, 5
,5 6
string7 =
keyFile> E
,E F
DataProtectionScopeG Z 
dpapiProtectionScope[ o
,o p
byteq u
[u v
]v w
ivx z
)z {
{ 	
byte 
[ 
] 
key 
= 

KeyManager #
.# $
ReadKey$ +
(+ ,
keyFile, 3
,3 4 
dpapiProtectionScope5 I
)I J
;J K
return 
Encrypt 
( 
	plainText $
,$ %
key& )
,) *
iv+ -
)- .
;. /
} 	
public'' 
static'' 
byte'' 
['' 
]'' 
Encrypt'' $
(''$ %
string''% +
	plainText'', 5
,''5 6
byte''7 ;
[''; <
]''< =
key''> A
,''A B
byte''C G
[''G H
]''H I
iv''J L
)''L M
{(( 	
byte** 
[** 
]** 
output** 
=** 
null**  
;**  !
using-- 
(-- 
MemoryStream-- 
mStream--  '
=--( )
new--* -
MemoryStream--. :
(--: ;
)--; <
)--< =
{.. 
byte00 
[00 
]00 

inputBytes00 !
=00" #
Encoding00$ ,
.00, -
UTF800- 1
.001 2
GetBytes002 :
(00: ;
	plainText00; D
)00D E
;00E F
var33 
crypto33 
=33 
new33 $
DESCryptoServiceProvider33 -
{44 
Key66 
=66	 

DEFAULT_KEY66 
.66 !
GetBytesFromHexString66 ,
(66, -
)66- .
,66. /
IV77 
=77 	

DEFAULT_IV77
 
.77 !
GetBytesFromHexString77 *
(77* +
)77+ ,
}88 
;88 
CryptoStream;; 
cStream;; 
=;; 
new;; 
CryptoStream;; +
(;;+ ,
mStream;;, 3
,<< 
crypto<< 
.<< 
CreateEncryptor<< ,
(<<, -
)<<- .
,<<. /
CryptoStreamMode<<0 @
.<<@ A
Write<<A F
)<<F G
;<<G H
cStream== 
.== 
Write== 
(== 

inputBytes== (
,==( )
$num==* +
,==+ ,

inputBytes==- 7
.==7 8
Length==8 >
)==> ?
;==? @
cStream>> 
.>> 
FlushFinalBlock>> '
(>>' (
)>>( )
;>>) *
cStream?? 
.?? 
Close?? 
(?? 
)?? 
;??  
outputBB 
=BB 
mStreamBB  
.BB  !
ToArrayBB! (
(BB( )
)BB) *
;BB* +
mStreamEE 
.EE 
CloseEE 
(EE 
)EE 
;EE  
cryptoFF 
.FF 
ClearFF 
(FF 
)FF 
;FF 
}GG 
returnJJ 
outputJJ 
;JJ 
}KK 	
publicUU 
staticUU 
stringUU 
DecryptUU $
(UU$ %
byteUU% )
[UU) *
]UU* +

cipherTextUU, 6
,UU6 7
stringUU8 >
keyFileUU? F
,UUF G
DataProtectionScopeUUH [ 
dpapiProtectionScopeUU\ p
,UUp q
byteUUr v
[UUv w
]UUw x
ivUUy {
)UU{ |
{VV 	
byteXX 
[XX 
]XX 
keyXX 
=XX 

KeyManagerXX #
.XX# $
ReadKeyXX$ +
(XX+ ,
keyFileXX, 3
,XX3 4 
dpapiProtectionScopeXX5 I
)XXI J
;XXJ K
returnYY 
DecryptYY 
(YY 

cipherTextYY %
,YY% &
keyYY' *
,YY* +
ivYY, .
)YY. /
;YY/ 0
}ZZ 	
publiccc 
staticcc 
stringcc 
Decryptcc $
(cc$ %
bytecc% )
[cc) *
]cc* +

cipherTextcc, 6
,cc6 7
bytecc8 <
[cc< =
]cc= >
keycc? B
,ccB C
byteccD H
[ccH I
]ccI J
ivccK M
)ccM N
{dd 	
byteee 
[ee 
]ee 
outputee 
;ee 
usinghh 
(hh 
MemoryStreamhh 
mStreamhh  '
=hh( )
newhh* -
MemoryStreamhh. :
(hh: ;
)hh; <
)hh< =
{ii 
varjj 
cryptojj 
=jj 
newjj $
DESCryptoServiceProviderjj -
{kk 
Keymm 
=mm	 

DEFAULT_KEYmm 
.mm !
GetBytesFromHexStringmm ,
(mm, -
)mm- .
,mm. /
IVnn 
=nn 	

DEFAULT_IVnn
 
.nn !
GetBytesFromHexStringnn *
(nn* +
)nn+ ,
}oo 
;oo 
CryptoStreamqq 
cStreamqq 
=qq 
newqq 
CryptoStreamqq +
(qq+ ,
mStreamqq, 3
,rr 
cryptorr 
.rr 
CreateDecryptorrr ,
(rr, -
)rr- .
,rr. /
CryptoStreamModerr0 @
.rr@ A
WriterrA F
)rrF G
;rrG H
cStreamss 
.ss 
Writess 
(ss 

cipherTextss (
,ss( )
$numss* +
,ss+ ,

cipherTextss- 7
.ss7 8
Lengthss8 >
)ss> ?
;ss? @
cStreamtt 
.tt 
FlushFinalBlocktt '
(tt' (
)tt( )
;tt) *
cStreamuu 
.uu 
Closeuu 
(uu 
)uu 
;uu  
outputww 
=ww 
mStreamww  
.ww  !
ToArrayww! (
(ww( )
)ww) *
;ww* +
mStreamzz 
.zz 
Closezz 
(zz 
)zz 
;zz  
crypto{{ 
.{{ 
Clear{{ 
({{ 
){{ 
;{{ 
}|| 
return 
Encoding 
. 
UTF8  
.  !
	GetString! *
(* +
output+ 1
)1 2
;2 3
}
ÄÄ 	
public
ÇÇ 
static
ÇÇ 
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ 

EncryptRSA
ÇÇ '
(
ÇÇ' (
byte
ÇÇ( ,
[
ÇÇ, -
]
ÇÇ- .
DataToEncrypt
ÇÇ/ <
,
ÇÇ< =
RSAParameters
ÇÇ> K

RSAKeyInfo
ÇÇL V
,
ÇÇV W
bool
ÇÇX \
DoOAEPPadding
ÇÇ] j
)
ÇÇj k
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
byte
ÜÜ 
[
ÜÜ 
]
ÜÜ 
encryptedData
ÜÜ $
;
ÜÜ$ %
using
àà 
(
àà &
RSACryptoServiceProvider
àà /
RSA
àà0 3
=
àà4 5
new
àà6 9&
RSACryptoServiceProvider
àà: R
(
ààR S
)
ààS T
)
ààT U
{
ââ 
RSA
ãã 
.
ãã 
ImportParameters
ãã (
(
ãã( )

RSAKeyInfo
ãã) 3
)
ãã3 4
;
ãã4 5
encryptedData
éé !
=
éé" #
RSA
éé$ '
.
éé' (
Encrypt
éé( /
(
éé/ 0
DataToEncrypt
éé0 =
,
éé= >
DoOAEPPadding
éé? L
)
ééL M
;
ééM N
}
èè 
return
êê 
encryptedData
êê $
;
êê$ %
}
ëë 
catch
îî 
(
îî $
CryptographicException
îî )
e
îî* +
)
îî+ ,
{
ïï 
Console
ññ 
.
ññ 
	WriteLine
ññ !
(
ññ! "
e
ññ" #
.
ññ# $
Message
ññ$ +
)
ññ+ ,
;
ññ, -
return
òò 
null
òò 
;
òò 
}
ôô 
}
õõ 	
public
ùù 
static
ùù 
byte
ùù 
[
ùù 
]
ùù 

DecryptRSA
ùù '
(
ùù' (
byte
ùù( ,
[
ùù, -
]
ùù- .
DataToDecrypt
ùù/ <
,
ùù< =
RSAParameters
ùù> K

RSAKeyInfo
ùùL V
,
ùùV W
bool
ùùX \
DoOAEPPadding
ùù] j
)
ùùj k
{
ûû 	
try
üü 
{
†† 
byte
°° 
[
°° 
]
°° 
decryptedData
°° $
;
°°$ %
using
££ 
(
££ &
RSACryptoServiceProvider
££ /
RSA
££0 3
=
££4 5
new
££6 9&
RSACryptoServiceProvider
££: R
(
££R S
)
££S T
)
££T U
{
§§ 
RSA
ßß 
.
ßß 
ImportParameters
ßß (
(
ßß( )

RSAKeyInfo
ßß) 3
)
ßß3 4
;
ßß4 5
decryptedData
¨¨ !
=
¨¨" #
RSA
¨¨$ '
.
¨¨' (
Decrypt
¨¨( /
(
¨¨/ 0
DataToDecrypt
¨¨0 =
,
¨¨= >
DoOAEPPadding
¨¨? L
)
¨¨L M
;
¨¨M N
}
≠≠ 
return
ÆÆ 
decryptedData
ÆÆ $
;
ÆÆ$ %
}
ØØ 
catch
≤≤ 
(
≤≤ $
CryptographicException
≤≤ )
e
≤≤* +
)
≤≤+ ,
{
≥≥ 
Console
¥¥ 
.
¥¥ 
	WriteLine
¥¥ !
(
¥¥! "
e
¥¥" #
.
¥¥# $
ToString
¥¥$ ,
(
¥¥, -
)
¥¥- .
)
¥¥. /
;
¥¥/ 0
return
∂∂ 
null
∂∂ 
;
∂∂ 
}
∑∑ 
}
ππ 	
}
∫∫ 
}ªª 